name: Build and Release Monorepo

on:
  push:
    branches:
      - main
  issue_comment:
    types:
      - created
      - edited

env:
  GITHUB_TOKEN: ${{ secrets.GH_PAT }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  beta-release:
    if: github.event_name == 'issue_comment' && github.event.comment.body == '/release-beta'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      issues: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Get Commenter's Username
        id: get-commenter
        run: echo "COMMENTER=${{ github.event.comment.user.login }}" >> $GITHUB_ENV

      - name: Fetch Collaborators and Permissions
        id: get-collaborators
        run: |
          collaborators=$(curl -s -H "Authorization: token ${{ secrets.GH_PAT }}" \
            "https://api.github.com/repos/${{ github.repository }}/collaborators")
          
          COMMENTER_PERMISSIONS=$(echo "$collaborators" | jq -r --arg commenter "${{ env.COMMENTER }}" \
            'map(select(.login == $commenter)) | .[0].permissions')

          echo "Commenter's permissions: $COMMENTER_PERMISSIONS"
          
          if [[ "$COMMENTER_PERMISSIONS" == *"admin\": true"* || "$COMMENTER_PERMISSIONS" == *"maintain\": true"* ]]; then
            echo "is_admin_or_maintain=true" >> $GITHUB_ENV
          else
            echo "is_admin_or_maintain=false" >> $GITHUB_ENV
            exit 1  # Prevent release if not admin or maintainer
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.9.0

      - name: Enable Corepack and Set Yarn Version
        run: |
          corepack enable
          corepack prepare yarn@4.3.1 --activate

      - name: Install Dependencies
        run: yarn install

      - name: Make handle-release.sh Executable
        run: chmod +x scripts/handle-release.sh

      - name: Run Beta Release Script
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: ./scripts/handle-release.sh beta
        if: env.is_admin_or_maintain == 'true'

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && (contains(github.event.head_commit.message, 'patch') || contains(github.event.head_commit.message, 'chore') || contains(github.event.head_commit.message, 'fix') || contains(github.event.head_commit.message, 'feat'))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      issues: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.9.0

      - name: Enable Corepack and Set Yarn Version
        run: |
          corepack enable
          corepack prepare yarn@4.3.1 --activate

      - name: Install Dependencies
        run: yarn install

      - name: Make handle-release.sh Executable
        run: chmod +x scripts/handle-release.sh

      - name: Run Custom Release Script
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: ./scripts/handle-release.sh
